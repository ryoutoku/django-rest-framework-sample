# for development
# use python manage.py runserver
version: '3.9'
services:
  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    env_file:
      - ./local.env
    networks: 
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: "redis:latest"
    volumes:
      - "./redis:/data"
    networks:
      - backend

  django-dev:
    container_name: django
    build:
      context: ./django
      dockerfile: Dockerfile
      target: development
    command: >
      bash -c '
      python manage.py migrate --database writer &&
      python manage.py runserver 0.0.0.0:8000
      '
    volumes:
      - ./django/src/:/app
    env_file:
      - ./local.env
    networks: 
      - backend
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy

  celery:
    build:
      context: ./django
      dockerfile: Dockerfile
      target: development
    container_name: celery
    networks:
      - backend
    env_file:
      - ./local.env
    volumes:
      - ./django/src:/app
    tty: true
    command: >
      python -m celery -A app worker --concurrency=1 -l info
    depends_on:
      redis:
        condition: service_started

networks:
  backend:
    external: false