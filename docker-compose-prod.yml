# for development
# use python manage.py runserver
version: '3.9'
services:
  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    env_file:
      - ./local.env
    networks: 
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5

  django-prod:
    build:
      context: ./django
      dockerfile: Dockerfile
      target: production
    command: >
      bash -c '
      python manage.py migrate --database writer &&
      python manage.py collectstatic --no-input &&
      python -m gunicorn app.wsgi
      -b 0.0.0.0:8000 
      --workers 4 
      --threads 2 
      --max-requests 500 
      --max-requests-jitter 200
      '
    volumes:
      - ./django/src/:/app
    env_file:
      - ./local.env
    environment:
      # local.envは共通。SETTING_MODULE上書き
      - DJANGO_SETTINGS_MODULE=app.settings.production
    networks: 
      - backend
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/log:/var/log/nginx
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./django/src/static:/app/static
    networks:
      - backend
    ports:
      - 80:80
    depends_on:
      django-prod:
        condition: service_started

networks:
  backend:
    external: false